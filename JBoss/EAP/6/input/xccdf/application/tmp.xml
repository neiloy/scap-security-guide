<Group id="auditing">
	<title>Auditing</title>
	<description>Auditing rules</description>


	<Rule id="jboss_roll_over_transfer_logs" severity="medium">
		<title>JBoss servers must be configured to roll over and transfer logs on a minimum weekly basis.</title>
		<description>Information stored in one location is vulnerable to accidental or incidental deletion or
			alteration. Protecting log data is important during a forensic investigation to ensure 
			investigators can track and understand what may have occurred. Off-loading should be set up 
			as a scheduled task but can be configured to be run manually, if other processes during 
			the off-loading are manual. Off-loading is a common process in information systems with 
			limited log storage capacity.</description>
		<rationale>Logs preservation and size limits can be implicitly incurred via periodic log rolling</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000515-AS-000203" stigid="000735" />
	</Rule>

	<Rule id="jboss_http_mgmt_session_encryption" severity="medium">
		<title>HTTP management session traffic must be encrypted</title>
		<description>Types of management interfaces utilized by the JBoss EAP 
			application server include web-based HTTP interfaces as well as 
			command line-based management interfaces. In the event remote HTTP 
			management is required, the access must be via HTTPS. This 
			requirement is in conjunction with the requirement to isolate all 
			management access to a restricted network.</description>
		<rationale>Administrative activity should be secured and is not so by default</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000014-AS-000009" stigid="000010" />
	</Rule>

	<Rule id="jboss_web_interface_https_enabled" severity="medium">
		<title>HTTPS must be enabled for JBoss web interfaces</title>
		<descritpion>Encryption is critical for protection of remote access 
			sessions. If encryption is not being used for integrity, malicious 
			users may gain the ability to modify the application server 
			configuration. The use of cryptography for ensuring integrity of 
			remote access sessions mitigates that risk. Application servers 
			utilize a web management interface and scripted commands when 
			allowing remote access. Web access requires the use of TLS, and 
			scripted access requires using ssh or some other form of approved 
			cryptography. Application servers must have a capability to enable a 
			secure remote admin capability. FIPS 140-2 approved TLS versions 
			include TLS V1.0 or greater. FIPS 140-2 approved TLS versions must 
			be enabled, and non-FIPS-approved SSL versions must be disabled. 
			NIST SP 800-52 specifies the preferred configurations for government 
			systems</description>
		<rationale>Remote web activity should be secured</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000015-AS-000010" stigid="000015" />
	</Rule>

	<Rule id="jboss_java_applications_permissions" severity="high"/>
		<title>Java permissions must be set for hosted applications</title>
		<description>The Java Security Manager is a java class that manages the 
			external boundary of the Java Virtual Machine (JVM) sandbox, 
			controlling how code executing within the JVM can interact with 
			resources outside the JVM. The JVM requires a security policy in 
			order to restrict application access. A properly configured security 
			policy will define what rights the application has to the underlying 
			system. For example, rights to make changes to files on the host 
			system or to initiate network sockets in order to connect to another 
			system</description>
		<rationale>Restricting application access will prevent unauthorized use of JVM</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000033-AS-000024" stigid="000025" />
	</Rule>

	<Rule id="jboss_mgmt_realm_user_roles" severity="medium">
		<title>Users in JBoss Management Security Realms must be in the appropriate role</title>
		<description>Security realms are a series of mappings between users and 
			passwords and users and roles. There are 2 JBoss security realms 
			provided by default; they are "management realm" and "application 
			realm". Management realm stores authentication information for the 
			management API, which provides functionality for the web-based 
			management console and the management command line interface (CLI). 
			mgmt-groups.properties stores user to group mapping for the 
			ManagementRealm but only when role-based access controls (RBAC) is 
			enabled. If management users are not in the appropriate role, 
			unauthorized access to JBoss resources can occur</description>
		<rationale>Appropriate assignment of roles allows users to be authorized for more finely differenced actions</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000033-AS-000024" stigid="000040" />
	</Rule>

	<Rule id="jboss_default_app_realm_silent_authentication" severity="high">
		<title>Silent Authentication must be removed from the Default Application Security Realm</title>
		<description>Silent Authentication is a configuration setting that allows 
			local OS users access to the JBoss server and a wide range of 
			operations without specifically authenticating on an individual user 
			basis. By default $localuser is a Superuser. This introduces an 
			integrity and availability vulnerability and violates best practice 
			requirements regarding accountability</description>
		<rationale>Allowing silent authentication creates a relaxed means of accessing the system</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000033-AS-000024" stigid="000045" />
	</Rule>

	<Rule id="jboss_default_mgmt_realm_silent_authentication" severity="high">
		<title>Silent Authentication must be removed from the Default Management Security Realm</title>
		<description>Silent Authentication is a configuration setting that allows 
			local OS users access to the JBoss server and a wide range of 
			operations without specifically authenticating on an individual user 
			basis. By default $localuser is a Superuser. This introduces an 
			integrity and availability vulnerability and violates best practice 
			requirements regarding accountability</description>
		<rationale>Allowing silent authentication creates a relaxed means of accessing the system</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000033-AS-000024" stigid="000050" />
	</Rule>

	<Rule id="jboss_java_security_mgr" severity="high">
		<title>The Java Security Manager must be enabled for the JBoss application server.</title>
		<description>The Java Security Manager is a java class that manages the external 
                        boundary of the Java Virtual Machine (JVM) sandbox, controlling how code 
                        executing within the JVM can interact with resources outside the JVM. The 
                        Java Security Manager uses a security policy to determine whether a given 
                        action will be permitted or denied. To protect the host system, the JBoss 
                        application server must be run within the Java Security Manager</description>
		<rationale>Creating a secure boundary prevents unnecessary and potentially disruptive access</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000033-AS-000024" stigid="000050" />
	</Rule>

	<Rule id="jboss_rbac_configuration" severity="high">
		<title>The JBoss server must be configured with Role Based Access Controls.</title>
		<description>By default, the JBoss server is not configured to utilize role based 
                        access controls (RBAC). RBAC provides the capability to restrict user access 
                        to their designated management role, thereby limiting access to only the 
                        JBoss functionality that they are supposed to have. Without RBAC, the JBoss 
                        server is not able to enforce authorized access according to role</description>
		<rationale>Having role-based access limits functionality to only the intended users</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000033-AS-000024" stigid="000050" />
	</Rule>

	<Rule id="jboss_mgmt_interface" severity="high">
		<title>JBoss management interfaces must be secured.</title>
		<description>JBoss utilizes the concept of security realms to secure the management 
                        interfaces used for JBoss server administration. If the security realm 
                        attribute is omitted or removed from the management interface definition, 
                        access to that interface is no longer secure. The JBoss management interfaces 
                        must be secured</description>
		<rationale>Management functionality of the JBoss server must remain secured separate from general application functionality</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000033-AS-000024" stigid="000050" />
	</Rule>

	<Rule id="jboss_logs_mgmt_access_authentication" severity="medium">
		<title>The JBoss server must generate log records for access and authentication events to the management interface.</title>
		<description>Log records can be generated from various components within the JBoss 
                        application server. The minimum list of logged events should be those 
                        pertaining to access and authentication events to the management interface 
                        as well as system startup and shutdown events. By default, JBoss does not log 
                        management interface access but does provide a default file handler. This 
                        handler needs to be enabled. Configuring this setting meets several STIG 
                        auditing requirements</description>
		<rationale>Management access and authentication should be recorded and auditable</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000089-AS-000050" stigid="000050" />
	</Rule>

	<Rule id="jboss_log_event_selection" severity="medium">
		<title>JBoss must be configured to allow only the ISSM (or individuals or roles appointed by the ISSM) to select which loggable events are to be logged.</title>
		<description>The JBoss server must be configured to select which personnel are 
                        assigned the role of selecting which loggable events are to be logged. In 
                        JBoss, the role designated for selecting auditable events is the "Auditor" 
                        role. The personnel or roles that can select loggable events are only the 
                        ISSM (or individuals or roles appointed by the ISSM)</description>
		<rationale>Ability to control loggable events should be restricted per ISSM standards</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000090-AS-000051" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_initialization" severity="medium">
		<title>JBoss must be configured to initiate session logging upon startup.</title>
		<description>Session logging activities are developed, integrated, and used in 
                        consultation with legal counsel in accordance with applicable federal 
                        laws, Executive Orders, directives, policies, or regulations</description>
		<rationale>Session logging must begin at the soonest opportunity to comply with regulation</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000092-AS-000053" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_connection" severity="medium">
		<title>JBoss must be configured to log the IP address of the remote system connecting to the JBoss system/cluster.</title>
		<description>Information system logging capability is critical for accurate forensic 
                        analysis. Without being able to establish what type of event occurred, it 
                        would be difficult to establish, correlate, and investigate the events 
                        relating to an incident or identify those responsible. Log record content 
                        that may be necessary to satisfy the requirement of this control includes 
                        time stamps, source and destination addresses, user/process identifiers, 
                        event descriptions, success/fail indications, filenames involved, and 
                        access control or flow control rules invoked. Application servers must log 
                        all relevant log data that pertains to the application server. Examples of 
                        relevant data include, but are not limited to, Java Virtual Machine (JVM) 
                        activity, HTTPD/Web server activity, and application server-related system 
                        process activity</description>
		<rationale>Remote system connections should be traceable and auditable</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000095-AS-000056" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_event_types" severity="medium">
		<title>JBoss must be configured to produce log records containing information to establish what type of events occurred.</title>
		<description>Information system logging capability is critical for accurate forensic 
                        analysis. Without being able to establish what type of event occurred, it 
                        would be difficult to establish, correlate, and investigate the events 
                        relating to an incident or identify those responsible. Log record content 
                        that may be necessary to satisfy the requirement of this control includes 
                        time stamps, source and destination addresses, user/process identifiers, 
                        event descriptions, success/fail indications, filenames involved, and 
                        access control or flow control rules invoked. Application servers must log 
                        all relevant log data that pertains to the application server. Examples of 
                        relevant data include, but are not limited to, Java Virtual Machine (JVM) 
                        activity, HTTPD/Web server activity, and application server-related system 
                        process activity</description>
		<rationale>Logging event types should be organizable by the type of event being traced</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000095-AS-000056" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_date_time" severity="medium">
		<title>JBoss Log Formatter must be configured to produce log records that establish the date and time the events occurred.</title>
		<description>Application server logging capability is critical for accurate forensic 
                        analysis. Without sufficient and accurate information, a correct replay of 
                        the events cannot be determined. Ascertaining the correct order of the 
                        events that occurred is important during forensic analysis. Events that 
                        appear harmless by themselves might be flagged as a potential threat when 
                        properly viewed in sequence. By also establishing the event date and time, 
                        an event can be properly viewed with an enterprise tool to fully see a 
                        possible threat in its entirety. Without sufficient information establishing 
                        when the log event occurred, investigation into the cause of event is 
                        severely hindered. Log record content that may be necessary to satisfy the 
                        requirement of this control includes, but is not limited to, time stamps, 
                        source and destination IP addresses, user/process identifiers, event 
                        descriptions, application-specific events, success/fail indications, 
                        filenames involved, access control, or flow control rules invoked. In addition 
                        to logging event information, application servers must also log the 
                        corresponding dates and times of these events. Examples of event data 
                        include, but are not limited to, Java Virtual Machine (JVM) activity, 
                        HTTPD activity, and application server-related system process activity</description>
		<rationale>Date and time must be traceable in the logs</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000096-AS-000059" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_source_app" severity="medium">
		<title>JBoss must be configured to produce log records that establish which hosted application triggered the events.</title>
		<description>Application server logging capability is critical for accurate 
                        forensic analysis. Without sufficient and accurate information, a correct 
                        replay of the events cannot be determined. By default, no web logging is 
                        enabled in JBoss. Logging can be configured per web application or by 
                        virtual server. If web application logging is not set up, application 
                        activity will not be logged. Ascertaining the correct location or process 
                        within the application server where the events occurred is important 
                        during forensic analysis. To determine where an event occurred, the log 
                        data must contain data containing the application identity</description>
		<rationale>The source application for any log event must be traceable</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000097-AS-000060" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_mgmt_interface_ip_port" severity="medium">
		<title>JBoss must be configured to record the IP address and port information used by management interface network traffic.</title>
		<description>Application server logging capability is critical for accurate forensic analysis. Without sufficient and accurate information, a correct replay of the events cannot be determined. Ascertaining the correct source, e.g., source IP, of the events is important during forensic analysis. Correctly determining the source will add information to the overall reconstruction of the loggable event. By determining the source of the event correctly, analysis of the enterprise can be undertaken to determine if the event compromised other assets within the enterprise. Without sufficient information establishing the source of the logged event, investigation into the cause of event is severely hindered. Log record content that may be necessary to satisfy the requirement of this control includes, but is not limited to, time stamps, source and destination IP addresses, user/process identifiers, event descriptions, application-specific events, success/fail indications, filenames involved, access control, or flow control rules invoked</description>
		<rationale>Details of access to the management interface should be traceable and confirmable</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000098-AS-000061" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_record_completion" severity="medium">
		<title>The application server must produce log records that contain sufficient information to establish the outcome of events.</title>
		<description>Information system logging capability is critical for accurate forensic analysis. Log record content that may be necessary to satisfy the requirement of this control includes, but is not limited to, time stamps, source and destination IP addresses, user/process identifiers, event descriptions, application-specific events, success/fail indications, filenames involved, access control or flow control rules invoked. Success and failure indicators ascertain the outcome of a particular application server event or function. As such, they also provide a means to measure the impact of an event and help authorized personnel to determine the appropriate response. Event outcome may also include event-specific results (e.g., the security state of the information system after the event occurred)</description>
		<rationale>Each log record must contain enough information to be of use in tracing event occurrences</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000099-AS-000062" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_level_root_logger" severity="medium">
		<title>JBoss ROOT logger must be configured to utilize the appropriate logging level.</title>
		<description>Information system logging capability is critical for accurate forensic analysis. Log record content that may be necessary to satisfy the requirement of this control includes: time stamps, source and destination addresses, user/process identifiers, event descriptions, success/fail indications, filenames involved, and access control or flow control rules invoked. See Chapter 14, Section 14.1.9, Table 14.4 of the Red Hat JBoss EAP Administration and Configuration Guide version 6.3 for specific details on log levels and log level values. The JBOSS application server ROOT logger captures all messages not captured by a log category and sends them to a log handler (FILE, CONSOLE, SYSLOG, ETC.). By default, the ROOT logger level is set to INFO, which is a value of 800. This will capture most events adequately. Any level numerically higher than INFO (> 800) records less data and may result in an insufficient amount of information being logged by the ROOT logger. This can result in failed forensic investigations. The ROOT logger level must be INFO level or lower to provide adequate log information</description>
		<rationale>The ROOT logger should include sufficient information for default logging to be useful</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000100-AS-000063" stigid="000050" />
	</Rule>

	<Rule id="jboss_file_permissions_access" severity="medium">
		<title>File permissions must be configured to protect log information from any type of unauthorized read access.</title>
		<description>If log data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is difficult, if not impossible, to achieve. When not configured to use a centralized logging solution like a syslog server, the JBoss EAP application server writes log data to log files that are stored on the OS; appropriate file permissions must be used to restrict access. Log information includes all information (e.g., log records, log settings, transaction logs, and log reports) needed to successfully log information system activity. Application servers must protect log information from unauthorized access</description>
		<rationale>Inappropriate file access makes log and system files potentially unreliable</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000118-AS-000078" stigid="000050" />
	</Rule>

	<Rule id="jboss_file_permissions_modification" severity="medium">
		<title>File permissions must be configured to protect log information from unauthorized modification.</title>
		<description>If log data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is difficult, if not impossible, to achieve. When not configured to use a centralized logging solution like a syslog server, the JBoss EAP application server writes log data to log files that are stored on the OS; appropriate file permissions must be used to restrict modification. Log information includes all information (e.g., log records, log settings, transaction logs, and log reports) needed to successfully log information system activity. Application servers must protect log information from unauthorized modification</description>
		<rationale>Inappropriate file access makes log and system files potentially unreliable</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000119-AS-000079" stigid="000050" />
	</Rule>

	<Rule id="jboss_file_permissions_deletion" severity="medium">
		<title>File permissions must be configured to protect log information from unauthorized deletion.</title>
		<description>If log data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is difficult, if not impossible, to achieve. When not configured to use a centralized logging solution like a syslog server, the JBoss EAP application server writes log data to log files that are stored on the OS, appropriate file permissions must be used to restrict deletion. Logon formation includes all information (e.g., log records, log settings, transaction logs, and log reports) needed to successfully log information system activity. Application servers must protect log information from unauthorized deletion</description>
		<rationale>Inappropriate file access makes log and system files potentially unreliable</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000120-AS-000080" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_offloading" severity="medium">
		<title>JBoss log records must be off-loaded onto a different system or system component a minimum of every seven days.</title>
		<description>JBoss logs by default are written to the local file system. A centralized logging solution like syslog should be used whenever possible; however, any log data stored to the file system needs to be off-loaded. JBoss EAP does not provide an automated backup capability. Instead, reliance is placed on OS or third-party tools to back up or off-load the log files. Protection of log data includes assuring log data is not accidentally lost or deleted. Off-loading log records to a different system or onto separate media from the system the application server is actually running on helps to assure that, in the event of a catastrophic system failure, the log records will be retained</description>
		<rationale>Off-loading log records protects against loss of long-term logs</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000125-AS-000084" stigid="000050" />
	</Rule>

	<Rule id="jboss_properties_file_permissions" severity="medium">
		<title>mgmt-users.properties file permissions must be set to allow access to authorized users only.</title>
		<description>The mgmt-users.properties file contains the password hashes of all users who are in a management role and must be protected. Application servers have the ability to specify that the hosted applications utilize shared libraries. The application server must have a capability to divide roles based upon duties wherein one project user (such as a developer) cannot modify the shared library code of another project user. The application server must also be able to specify that non-privileged users cannot modify any shared library code at all</description>
		<rationale>Properties file modification should be restricted to authorized users</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000133-AS-000092" stigid="000050" />
	</Rule>

	<Rule id="jboss_usr_restricted_access" severity="high">
		<title>JBoss process owner interactive access must be restricted.</title>
		<description>JBoss does not require admin rights to operate and should be run as a regular user. In addition, if the user account was to be compromised and the account was allowed interactive logon rights, this would increase the risk and attack surface against the JBoss system. The right to interactively log on to the system using the JBoss account should be limited according to the OS capabilities</description>
		<rationale>The service user running JBoss should have appropriate access to the rest of the system and not be used for purposes besides running JBoss</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000141-AS-000095" stigid="000050" />
	</Rule>

	<Rule id="jboss_google_analytics" severity="medium">
		<title>Google Analytics must be disabled in EAP Console.</title>
		<description>The Google Analytics feature aims to help Red Hat EAP team understand how customers are using the console and which parts of the console matter the most to the customers. This information will, in turn, help the team to adapt the console design, features, and content to the immediate needs of the customers. Sending analytical data to the vendor introduces risk of unauthorized data exfiltration. This capability must be disabled</description>
		<rationale>Sending data to external entities should be restricted</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000141-AS-000095" stigid="000050" />
	</Rule>

	<Rule id="jboss_usr_restricted_permissions" severity="high">
		<title>JBoss process owner execution permissions must be limited.</title>
		<description>JBoss EAP application server can be run as the OS admin, which is not advised. Running the application server with admin privileges increases the attack surface by granting the application server more rights than it requires in order to operate. If the server is compromised, the attacker will have the same rights as the application server, which in that case would be admin rights. The JBoss EAP server must not be run as the admin user</description>
		<rationale>The service user running JBoss should have appropriate access to the rest of the system and not be used for purposes besides running JBoss</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000141-AS-000095" stigid="000050" />
	</Rule>

	<Rule id="jboss_quickstarts_removed" severity="medium">
		<title>JBoss QuickStarts must be removed.</title>
		<description>JBoss QuickStarts are demo applications that can be deployed quickly. Demo applications are not written with security in mind and often open new attack vectors. QuickStarts must be removed</description>
		<rationale>Applications not written to security standards should not be deployed</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000141-AS-000095" stigid="000050" />
	</Rule>

	<Rule id="jboss_jmx_removed" severity="medium">
		<title>Remote access to JMX subsystem must be disabled.</title>
		<description>The JMX subsystem allows you to trigger JDK and application management operations remotely. In a managed domain configuration, the JMX subsystem is removed by default. For a standalone configuration, it is enabled by default and must be removed</description>
		<rationale>JMX remote access allows potentially unsecure interaction with JBoss</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000141-AS-000095" stigid="000050" />
	</Rule>

	<Rule id="jboss_welcome_removed" severity="low">
		<title>Welcome Web Application must be disabled.</title>
		<description>The Welcome to JBoss web page provides a redirect to the JBoss admin console, which, by default, runs on TCP 9990 as well as redirects to the Online User Guide and Online User Groups hosted at locations on the Internet. The welcome page is unnecessary and should be disabled or replaced with a valid web page</description>
		<rationale>Unnecessary/extraneous pages should not be presented</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000141-AS-000095" stigid="000050" />
	</Rule>

	<Rule id="jboss_ports_approval" severity="medium">
		<title>JBoss application and management ports must be approved by the PPSM CAL.</title>
		<description>Some networking protocols may not meet organizational security requirements to protect data and components. Application servers natively host a number of various features, such as management interfaces, httpd servers and message queues. These features all run on TCPIP ports. This creates the potential that the vendor may choose to utilize port numbers or network services that have been deemed unusable by the organization. The application server must have the capability to both reconfigure and disable the assigned ports without adversely impacting application server operation capabilities. For a list of approved ports and protocols, reference the DoD ports and protocols website at https://powhatan.iiie.disa.mil/ports/cal.html</description>
		<rationale>Approved ports and protocols must be deemed usable</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000142-AS-000014" stigid="000050" />
	</Rule>

	<Rule id="jboss_authentication" severity="medium">
		<title>The JBoss Server must be configured to utilize a centralized authentication mechanism such as AD or LDAP.</title>
		<description>To assure accountability and prevent unauthorized access, application server users must be uniquely identified and authenticated. This is typically accomplished via the use of a user store that is either local (OS-based) or centralized (Active Directory/LDAP) in nature. It should be noted that JBoss does not specifically mention Active Directory since AD is LDAP aware. To ensure accountability and prevent unauthorized access, the JBoss Server must be configured to utilize a centralized authentication mechanism</description>
		<rationale>Centralized authentication allows better control of authorized access</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000148-AS-000101" stigid="000050" />
	</Rule>

	<Rule id="jboss_admin_authentication" severity="medium">
		<title>The JBoss Server must be configured to use certificates to authenticate admins.</title>
		<description>Multifactor authentication creates a layered defense and makes it more difficult for an unauthorized person to access the application server. If one factor is compromised or broken, the attacker still has at least one more barrier to breach before successfully breaking into the target. Unlike a simple username/password scenario where the attacker could gain access by knowing both the username and password without the user knowing his account was compromised, multifactor authentication adds the requirement that the attacker must have something from the user, such as a token, or to biometrically be the user. Multifactor authentication is defined as: using two or more factors to achieve authentication. Factors include: (i) something a user knows (e.g., password/PIN); (ii) something a user has (e.g., cryptographic identification device, token); or (iii) something a user is (e.g., biometric). A CAC or PKI Hardware Token meets this definition. A privileged account is defined as an information system account with authorizations of a privileged user. These accounts would be capable of accessing the web management interface. When accessing the application server via a network connection, administrative access to the application server must be PKI Hardware Token enabled or a DoD-approved soft certificate</description>
		<rationale>Administrative access must meet a higher authentication standard</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000149-AS-000102" stigid="000050" />
	</Rule>

	<Rule id="jboss_account_individuality" severity="medium">
		<title>The JBoss server must be configured to use individual accounts and not generic or shared accounts.</title>
		<description>To assure individual accountability and prevent unauthorized access, application server users (and any processes acting on behalf of application server users) must be individually identified and authenticated. A group authenticator is a generic account used by multiple individuals. Use of a group authenticator alone does not uniquely identify individual users. Application servers must ensure that individual users are authenticated prior to authenticating via role or group authentication. This is to ensure that there is non-repudiation for actions taken</description>
		<rationale>Individual accounts allow finer accountability</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000153-AS-000104" stigid="000050" />
	</Rule>

	<Rule id="jboss_mgmt_interface_binding" severity="medium">
		<title>The JBoss server must be configured to bind the management interfaces to only management networks.</title>
		<description>JBoss provides multiple interfaces for accessing the system. By default, these are called "public" and "management". Allowing non-management traffic to access the JBoss management interface increases the chances of a security compromise. The JBoss server must be configured to bind the management interface to a network that controls access. This is usually a network that has been designated as a management network and has restricted access. Similarly, the public interface must be bound to a network that is not on the same segment as the management interface</description>
		<rationale>Secure networks should be used for management traffic</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000158-AS-000108" stigid="000050" />
	</Rule>

	<Rule id="jboss_mgmt_authentication" severity="medium">
		<title>JBoss management Interfaces must be integrated with a centralized authentication mechanism that is configured to manage accounts according to DoD policy.</title>
		<description>JBoss EAP provides a security realm called ManagementRealm. By default, this realm uses the mgmt-users.properties file for authentication. Using file-based authentication does not allow the JBoss server to be in compliance with a wide range of user management requirements such as automatic disabling of inactive accounts as per DoD policy. To address this issue, the management interfaces used to manage the JBoss server must be associated with a security realm that provides centralized authentication management. Examples are AD or LDAP. Management of user identifiers is not applicable to shared information system accounts (e.g., guest and anonymous accounts). It is commonly the case that a user account is the name of an information system account associated with an individual</description>
		<rationale>Centralized authentication allows better control of authorized access</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000163-AS-000111" stigid="000050" />
	</Rule>

	<Rule id="jboss_password_vault" severity="medium">
		<title>The JBoss Password Vault must be used for storing passwords or other sensitive configuration information.</title>
		<description>JBoss EAP 6 has a Password Vault to encrypt sensitive strings, store them in an encrypted keystore, and decrypt them for applications and verification systems. Plain-text configuration files, such as XML deployment descriptors, need to specify passwords and other sensitive information. Use the JBoss EAP Password Vault to securely store sensitive strings in plain-text files</description>
		<rationale>Passwords should be stored securely</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000171-AS-000119" stigid="000050" />
	</Rule>

	<Rule id="jboss_password_keystore_truststore" severity="medium">
		<title>JBoss KeyStore and Truststore passwords must not be stored in clear text.</title>
		<description>Access to the JBoss Password Vault must be secured, and the password used to access must be encrypted. There is a specific process used to generate the encrypted password hash. This process must be followed in order to store the password in an encrypted format. The admin must utilize this process in order to ensure the Keystore password is encrypted</description>
		<rationale>Passwords should be stored securely</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000171-AS-000119" stigid="000050" />
	</Rule>

	<Rule id="jboss_ldap_empty_password" severity="medium">
		<title>LDAP enabled security realm value allow-empty-passwords must be set to false.</title>
		<description>Passwords need to be protected at all times, and encryption is the standard method for protecting passwords during transmission. If passwords are not encrypted, they can be plainly read (i.e., clear text) and easily compromised. Application servers have the capability to utilize either certificates (tokens) or user IDs and passwords in order to authenticate. When the application server transmits or receives passwords, the passwords must be encrypted</description>
		<rationale>Passwords should be stored securely</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000172-AS-000120" stigid="000050" />
	</Rule>

	<Rule id="jboss_ldap_encryption" severity="medium">
		<title>JBoss must utilize encryption when using LDAP for authentication.</title>
		<description>Passwords need to be protected at all times, and encryption is the standard method for protecting passwords during transmission. Application servers have the capability to utilize LDAP directories for authentication. If LDAP connections are not protected during transmission, sensitive authentication credentials can be stolen. When the application server utilizes LDAP, the LDAP traffic must be encrypted</description>
		<rationale>Passwords should be stored securely</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000172-AS-000121" stigid="000050" />
	</Rule>

	<Rule id="jboss_private_key_access" severity="medium">
		<title>The JBoss server must be configured to restrict access to the web servers private key to authenticated system administrators.</title>
		<description>The cornerstone of the PKI is the private key used to encrypt or digitally sign information. If the private key is stolen, this will lead to the compromise of the authentication and non-repudiation gained through PKI because the attacker can use the private key to digitally sign documents and can pretend to be the authorized user. Both the holders of a digital certificate and the issuing authority must protect the computers, storage devices, or whatever they use to keep the private keys. Java-based application servers utilize the Java keystore, which provides storage for cryptographic keys and certificates. The keystore is usually maintained in a file stored on the file system</description>
		<rationale>Access to the private key is a potential security risk and should be restricted to specific users</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000176-AS-000125" stigid="000050" />
	</Rule>

	<Rule id="jboss_app_mgmt_separation" severity="medium">
		<title>The JBoss server must separate hosted application functionality from application server management functionality.</title>
		<description>The application server consists of the management interface and hosted applications. By separating the management interface from hosted applications, the user must authenticate as a privileged user to the management interface before being presented with management functionality. This prevents non-privileged users from having visibility to functions not available to the user. By limiting visibility, a compromised non-privileged account does not offer information to the attacker or functionality and information needed to further the attack on the application server. JBoss is designed to operate with separate application and management interfaces. The JBoss server is started via a script. To start the JBoss server in domain mode, the admin will execute the <JBOSS_HOME>/bin/domain.sh or domain.bat script. To start the JBoss server in standalone mode, the admin will execute <JBOSS_HOME>/bin/standalone.bat or standalone.sh. Command line flags are used to specify which network address is used for management and which address is used for public/application access</description>
		<rationale>Management functions and application functions should be authorized separately for the appropriate users</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000211-AS-000146" stigid="000050" />
	</Rule>

	<Rule id="jboss_app_files_file_permissions" severity="medium">
		<title>JBoss file permissions must be configured to protect the confidentiality and integrity of application files.</title>
		<description>The JBoss EAP Application Server is a Java-based AS. It is installed on the OS file system and depends upon file system access controls to protect application data at rest. The file permissions set on the JBoss EAP home folder must be configured so as to limit access to only authorized people and processes. The account used for operating the JBoss server and any designated administrative or operational accounts are the only accounts that should have access. When data is written to digital media such as hard drives, mobile computers, external/removable hard drives, personal digital assistants, flash/thumb drives, etc., there is risk of data loss and data compromise. Steps must be taken to ensure data stored on the device is protected</description>
		<rationale>Application files should not be accessible by unauthorized users</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000231-AS-000133" stigid="000050" />
	</Rule>

	<Rule id="jboss_log_files_access_restriction" severity="medium">
		<title>Access to JBoss log files must be restricted to authorized users.</title>
		<description>If the application provides too much information in error logs and administrative messages to the screen, this could lead to compromise. The structure and content of error messages need to be carefully considered by the organization and development team. The extent to which the information system is able to identify and handle error conditions is guided by organizational policy and operational requirements. Application servers must protect the error messages that are created by the application server. All application server users' accounts are used for the management of the server and the applications residing on the application server. All accounts are assigned to a certain role with corresponding access rights. The application server must restrict access to error messages so only authorized users may view them. Error messages are usually written to logs contained on the file system. The application server will usually create new log files as needed and must take steps to ensure that the proper file permissions are utilized when the log files are created</description>
		<rationale>Log files should not be accessible by unauthorized users</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000267-AS-000170" stigid="000050" />
	</Rule>

	<Rule id="jboss_domain_controller_network_access" severity="medium">
		<title>Network access to HTTP management must be disabled on domain-enabled application servers not designated as the domain controller.</title>
		<description>When configuring JBoss application servers into a domain configuration, HTTP management capabilities are not required on domain member servers as management is done via the server that has been designated as the domain controller. Leaving HTTP management capabilities enabled on domain member servers increases the attack surfaces; therefore, management services on domain member servers must be disabled and management services performed via the domain controller</description>
		<rationale>Management on a domain configuration should only be done through the controller</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000316-AS-000199" stigid="000050" />
	</Rule>

	<Rule id="jboss_security_modifications_restricted" severity="medium">
		<title>The application server must prevent non-privileged users from executing privileged functions to include disabling, circumventing, or altering implemented security safeguards/countermeasures.</title>
		<description>Preventing non-privileged users from executing privileged functions mitigates the risk that unauthorized individuals or processes may gain unnecessary access to information or privileges. Restricting non-privileged users also prevents an attacker who has gained access to a non-privileged account, from elevating privileges, creating accounts, and performing system checks and maintenance</description>
		<rationale>Unauthorized users should not be able to change security configurations</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000340-AS-000185" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_admin_activity" severity="medium">
		<title>The JBoss server must be configured to log all admin activity.</title>
		<description>In order to be able to provide a forensic history of activity, the application server must ensure users who are granted a privileged role or those who utilize a separate distinct account when accessing privileged functions or data have their actions logged. If privileged activity is not logged, no forensic logs can be used to establish accountability for privileged actions that occur on the system</description>
		<rationale>Administrative activity should be traceable</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000343-AS-000030" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_syslog" severity="medium">
		<title>The JBoss server must be configured to utilize syslog logging.</title>
		<description>Information system logging capability is critical for accurate forensic analysis. Log record content that may be necessary to satisfy the requirement of this control includes, but is not limited to, time stamps, source and destination IP addresses, user/process identifiers, event descriptions, application-specific events, success/fail indications, filenames involved, access control or flow control rules invoked. Off-loading is a common process in information systems with limited log storage capacity. Centralized management of log records provides for efficiency in maintenance and management of records, as well as the backup and archiving of those records. Application servers and their related components are required to off-load log records onto a different system or media than the system being logged</description>
		<rationale>Centralized logging is important to accountability/auditability</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000358-AS-000064" stigid="000050" />
	</Rule>

	<Rule id="jboss_prod_app_deployment" severity="medium">
		<title>Production JBoss servers must not allow automatic application deployment.</title>
		<description>When dealing with access restrictions pertaining to change control, it should be noted that any changes to the software and/or application server configuration can potentially have significant effects on the overall security of the system. Access restrictions for changes also include application software libraries. If the application server provides automatic code deployment capability, (where updates to applications hosted on the application server are automatically performed, usually by the developers' IDE tool), it must also provide a capability to restrict the use of automatic application deployment. Automatic code deployments are allowable in a development environment, but not in production</description>
		<rationale>Application deployment should be consciously controlled</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000380-AS-000088" stigid="000050" />
	</Rule>

	<Rule id="jboss_prod_app_deployment_failure" severity="medium">
		<title>Production JBoss servers must log when failed application deployments occur.</title>
		<description>Without logging the enforcement of access restrictions against changes to the application server configuration, it will be difficult to identify attempted attacks, and a log trail will not be available for forensic investigation for after-the-fact actions. Configuration changes may occur to any of the modules within the application server through the management interface, but logging of actions to the configuration of a module outside the application server is not logged. Enforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Log items may consist of lists of actions blocked by access restrictions or changes identified after the fact</description>
		<rationale>Failed application deployment should be recorded for later analysis</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000381-AS-000089" stigid="000050" />
	</Rule>

	<Rule id="jboss_prod_app_deployment_success" severity="medium">
		<title>Production JBoss servers must log when successful application deployments occur.</title>
		<description>Without logging the enforcement of access restrictions against changes to the application server configuration, it will be difficult to identify attempted attacks, and a log trail will not be available for forensic investigation for after-the-fact actions. Configuration changes may occur to any of the modules within the application server through the management interface, but logging of actions to the configuration of a module outside the application server is not logged. Enforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Log items may consist of lists of actions blocked by access restrictions or changes identified after the fact</description>
		<rationale>Successful application deployment should be recorded for later confirmation</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000381-AS-000089" stigid="000050" />
	</Rule>

	<Rule id="jboss_certificate_authority_verification" severity="medium">
		<title>JBoss must be configured to use DoD PKI-established certificate authorities for verification of the establishment of protected sessions.</title>
		<description>Untrusted Certificate Authorities (CA) can issue certificates, but they may be issued by organizations or individuals that seek to compromise DoD systems or by organizations with insufficient security controls. If the CA used for verifying the certificate is not a DoD-approved CA, trust of this CA has not been established. The DoD will only accept PKI certificates obtained from a DoD-approved internal or external certificate authority. Reliance on CAs for the establishment of secure sessions includes, for example, the use of SSL/TLS certificates. The application server must only allow the use of DoD PKI-established certificate authorities for verification</description>
		<rationale>Certificate authorities must be verified/approved</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000427-AS-000264" stigid="000050" />
	</Rule>

	<Rule id="jboss_high_availability" severity="medium">
		<title>The JBoss server, when hosting mission critical applications, must be in a high-availability (HA) cluster.</title>
		<description>A MAC I system is a system that handles data vital to the organization's operational readiness or effectiveness of deployed or contingency forces. A MAC I system must maintain the highest level of integrity and availability. By HA clustering the application server, the hosted application and data are given a platform that is load-balanced and provides high availability</description>
		<rationale>High-availability for necessary applications minimizes problematic interruptions to other services</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000435-AS-000069" stigid="000050" />
	</Rule>

	<Rule id="jboss_tls_configuration" severity="medium">
		<title>JBoss must be configured to use an approved TLS version.</title>
		<description>Preventing the disclosure of transmitted information requires that the application server take measures to employ some form of cryptographic mechanism in order to protect the information during transmission. This is usually achieved through the use of Transport Layer Security (TLS). JBoss relies on the underlying SSL implementation running on the OS. This can be either Java based or OpenSSL. The SSL protocol setting determines which SSL protocol is used. SSL has known security vulnerabilities, so TLS should be used instead. If data is transmitted unencrypted, the data then becomes vulnerable to disclosure. The disclosure may reveal user identifier/password combinations, website code revealing business logic, or other user personal information. FIPS 140-2 approved TLS versions include TLS V1.0 or greater. TLS must be enabled, and non-FIPS-approved SSL versions must be disabled. NIST SP 800-52 specifies the preferred configurations for government systems</description>
		<rationale>Transmitted information must be secured/encrypted</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000439-AS-000155" stigid="000050" />
	</Rule>

	<Rule id="jboss_tls_encryption" severity="medium">
		<title>JBoss must be configured to use an approved cryptographic algorithm in conjunction with TLS.</title>
		<description>Preventing the disclosure or modification of transmitted information requires that application servers take measures to employ approved cryptography in order to protect the information during transmission over the network. This is usually achieved through the use of Transport Layer Security (TLS), SSL VPN, or IPSec tunnel. If data in transit is unencrypted, it is vulnerable to disclosure and modification. If approved cryptographic algorithms are not used, encryption strength cannot be assured. FIPS 140-2 approved TLS versions include TLS V1.0 or greater. TLS must be enabled, and non-FIPS-approved SSL versions must be disabled. NIST SP 800-52 specifies the preferred configurations for government systems</description>
		<rationale>Transmitted information must be secured/encrypted</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000440-AS-000167" stigid="000050" />
	</Rule>

	<Rule id="jboss_vendor_support" severity="high">
		<title>Production JBoss servers must be supported by the vendor.</title>
		<description>The JBoss product is available as Open Source; however, the Red Hat vendor provides updates, patches and support for the JBoss product. It is imperative that patches and updates be applied to JBoss in a timely manner as many attacks against JBoss focus on unpatched systems. It is critical that support be obtained and made available</description>
		<rationale>Unsupported servers present maintenance risks</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000456-AS-000266" stigid="000050" />
	</Rule>

	<Rule id="jboss_jre_updates" severity="high">
		<title>The JRE installed on the JBoss server must be kept up to date.</title>
		<description>The JBoss product is available as Open Source; however, the Red Hat vendor provides updates, patches and support for the JBoss product. It is imperative that patches and updates be applied to JBoss in a timely manner as many attacks against JBoss focus on unpatched systems. It is critical that support be obtained and made available</description>
		<rationale>Unsupported/outdated services present maintenance risks</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000456-AS-000266" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_privilege_modification" severity="medium">
		<title>JBoss must be configured to generate log records when successful/unsuccessful attempts to modify privileges occur.</title>
		<description>Changing privileges of a subject/object may cause a subject/object to gain or lose capabilities. When successful/unsuccessful changes are made, the event needs to be logged. By logging the event, the modification or attempted modification can be investigated to determine if it was performed inadvertently or maliciously</description>
		<rationale>Modifications to privileges should be traceable and auditable</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000495-AS-000220" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_privilege_deletion" severity="medium">
		<title>JBoss must be configured to generate log records when successful/unsuccessful attempts to delete privileges occur.</title>
		<description>Deleting privileges of a subject/object may cause a subject/object to gain or lose capabilities. When successful and unsuccessful privilege deletions are made, the events need to be logged. By logging the event, the modification or attempted modification can be investigated to determine if it was performed inadvertently or maliciously</description>
		<rationale>Modifications to privileges should be traceable and auditable</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000499-AS-000224" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_logon_attempts" severity="medium">
		<title>JBoss must be configured to generate log records when successful/unsuccessful logon attempts occur.</title>
		<description>Logging the access to the application server allows the system administrators to monitor user accounts. By logging successful/unsuccessful logons, the system administrator can determine if an account is compromised (e.g., frequent logons) or is in the process of being compromised (e.g., frequent failed logons) and can take actions to thwart the attack. Logging successful logons can also be used to determine accounts that are no longer in use</description>
		<rationale>Attempts to logon may indicate other security concerns</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000503-AS-000228" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_restricted_actions" severity="medium">
		<title>JBoss must be configured to generate log records for privileged activities.</title>
		<description>Without generating log records that are specific to the security and mission needs of the organization, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. Privileged activities would occur through the management interface. This interface can be web-based or can be command line utilities. Whichever method is utilized by the application server, these activities must be logged</description>
		<rationale>Secured/controlled activities should be recorded in the logs</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000504-AS-000229" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_mgmt_sessions" severity="medium">
		<title>JBoss must be configured to generate log records that show starting and ending times for access to the application server management interface.</title>
		<description>Determining when a user has accessed the management interface is important to determine the timeline of events when a security incident occurs. Generating these events, especially if the management interface is accessed via a stateless protocol like HTTP, the log events will be generated when the user performs a logon (start) and when the user performs a logoff (end). Without these events, the user and later investigators cannot determine the sequence of events and therefore cannot determine what may have happened and by whom it may have been done. The generation of start and end times within log events allows the user to perform their due diligence in the event of a security breach</description>
		<rationale>Management sessions should be traceable in the logs</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000505-AS-000230" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_concurrent_access" severity="medium">
		<title>JBoss must be configured to generate log records when concurrent logons from different workstations occur to the application server management interface.</title>
		<description>Concurrent logons from different systems could possibly indicate a compromised account. When concurrent logons are made from different workstations to the management interface, a log record needs to be generated. This configuration setting provides forensic evidence that allows the system administrator to investigate access to the system and determine if the duplicate access was authorized or not. JBoss provides a multitude of different log formats, and API calls that log access to the system. If the default format and location is not used, the system admin must provide the configuration documentation and settings that show that this requirement is being met</description>
		<rationale>Concurrent management interface sessions may indicate a security compromise or inappropriately regulated management changes</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000506-AS-000231" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_account_maintenance" severity="medium">
		<title>JBoss must be configured to generate log records for all account creations, modifications, disabling, and termination events.</title>
		<description>The maintenance of user accounts is a key activity within the system to determine access and privileges. Through changes to accounts, an attacker can create an account for persistent access, modify an account to elevate privileges, or terminate/disable an account(s) to cause a DoS for user(s). To be able to track and investigate these actions, log records must be generated for any account modification functions. Application servers either provide a local user store, or they can integrate with enterprise user stores like LDAP. As such, the application server must be able to generate log records on account creation, modification, disabling, and termination</description>
		<rationale>Modifications to accounts or privileges should be traceable in the logs</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000509-AS-000234" stigid="000050" />
	</Rule>

	<Rule id="jboss_certificates_configuration" severity="medium">
		<title>The JBoss server must be configured to use DoD- or CNSS-approved PKI Class 3 or Class 4 certificates.</title>
		<description>Class 3 PKI certificates are used for servers and software signing rather than for identifying individuals. Class 4 certificates are used for business-to-business transactions. Utilizing unapproved certificates not issued or approved by DoD or CNS creates an integrity risk. The application server must utilize approved DoD or CNS Class 3 or Class 4 certificates for software signing and business-to-business transactions</description>
		<rationale>Only approved certificates should be used</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000514-AS-000137" stigid="000050" />
	</Rule>

	<Rule id="jboss_logging_rolling" severity="medium">
		<title>JBoss servers must be configured to roll over and transfer logs on a minimum weekly basis.</title>
		<description>Information stored in one location is vulnerable to accidental or incidental deletion or alteration. Protecting log data is important during a forensic investigation to ensure investigators can track and understand what may have occurred. Off-loading should be set up as a scheduled task but can be configured to be run manually, if other processes during the off-loading are manual. Off-loading is a common process in information systems with limited log storage capacity</description>
		<rationale>Server logs should be rolled periodically to protect long-term log data</rationale>
		<ident cce=""/>
		<ref ossrg="SRG-APP-000515-AS-000203" stigid="000050" />
	</Rule>



</Group>


